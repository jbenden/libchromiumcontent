--- a/build/config/BUILDCONFIG.gn	2017-02-24 08:22:05.341196000 -0700
+++ b/build/config/BUILDCONFIG.gn	2017-02-23 10:57:28.334553000 -0700
@@ -123,6 +123,8 @@
 #   even if the value is overridden, which is wasteful. See first bullet.
 
 declare_args() {
+  is_electron_build = false
+
   # Set to enable the official build level of optimization. This has nothing
   # to do with branding, but enables an additional level of optimization above
   # release (!is_debug). This might be better expressed as a tri-state
@@ -490,6 +492,7 @@
   "//build/config/compiler:no_rtti",
   "//build/config/compiler:runtime_library",
   "//build/config/sanitizers:default_sanitizer_flags",
+  "//chromiumcontent:mas_build",
 ]
 if (is_win) {
   default_compiler_configs += [
--- a/third_party/WebKit/Source/platform/BUILD.gn	2017-02-01 19:03:09.000000000 -0700
+++ b/third_party/WebKit/Source/platform/BUILD.gn	2017-02-23 10:55:30.585449000 -0700
@@ -171,6 +171,7 @@
 }
 
 executable("character_data_generator") {
+  configs += [ "//chromiumcontent:build_time_executable" ]
   sources = [
     "text/CharacterPropertyDataGenerator.cpp",
     "text/CharacterPropertyDataGenerator.h",
--- a/third_party/widevine/cdm/BUILD.gn	2017-02-24 08:22:08.897471000 -0700
+++ b/third_party/widevine/cdm/BUILD.gn	2017-02-23 10:56:04.736070000 -0700
@@ -105,7 +105,7 @@
       "//build/config/sanitizers:deps",
     ]
 
-    if (is_mac) {
+    if (is_mac && !is_electron_build) {
       ldflags = [
         # Not to strip important symbols by -Wl,-dead_strip.
         "-Wl,-exported_symbol,_PPP_GetInterface",
--- a/content/common/set_process_title_linux.cc	2017-02-25 09:03:30.730894000 -0700
+++ b/content/common/set_process_title_linux.cc	2017-02-25 10:03:22.892139000 -0700
@@ -46,7 +46,9 @@
 #include <string.h>
 #include <unistd.h>
 
+#if !defined(OS_FREEBSD)
 extern char** environ;
+#endif
 
 static char** g_main_argv = NULL;
 
@@ -111,9 +113,11 @@
   if (g_main_argv)
     return;
 
+#if !defined(OS_FREEBSD)
   uintptr_t page_size = sysconf(_SC_PAGESIZE);
   // Check that the argv array is in fact on the same page of memory
   // as the environment array just as an added measure of protection.
   if (((uintptr_t) environ) / page_size == ((uintptr_t) main_argv) / page_size)
+#endif
     g_main_argv = const_cast<char**>(main_argv);
 }
--- a/third_party/angle/BUILD.gn	2017-02-25 16:24:34.263054000 -0700
+++ b/third_party/angle/BUILD.gn	2017-02-25 16:25:19.084791000 -0700
@@ -415,6 +415,15 @@
       "@executable_path/",
     ]
   }
+  if (is_bsd) {
+    rpath_link = "."
+
+    ldflags = [
+      # Want to pass "\$". GN will re-escape as required for ninja.
+      "-Wl,-rpath=\$ORIGIN/${rpath_link}",
+      "-Wl,-rpath-link=${rpath_link}",
+    ]
+  }
 }
 
 shared_library("libGLESv2") {
