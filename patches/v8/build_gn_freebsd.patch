diff --git a/gni/v8.gni b/gni/v8.gni
index 3759572..264c1de 100644
--- a/gni/v8.gni
+++ b/gni/v8.gni
@@ -4,6 +4,7 @@
 
 import("//build/config/sanitizers/sanitizers.gni")
 import("//build/config/v8_target_cpu.gni")
+import("//chromiumcontent/config.gni")
 
 declare_args() {
   # Indicate if valgrind was fetched as a custom deps to make it available on
@@ -113,7 +114,13 @@ template("v8_executable") {
 }
 
 template("v8_component") {
-  component(target_name) {
+  if (is_electron_build && !is_component_build &&
+      (target_name == "v8_libbase" || target_name == "v8_libplatform")) {
+    v8_component = "source_set"
+  } else {
+    v8_component = component_electron
+  }
+  target(v8_component, target_name) {
     forward_variables_from(invoker, "*", [ "configs" ])
     configs += invoker.configs
     configs -= v8_remove_configs
diff --git a/src/inspector/BUILD.gn b/src/inspector/BUILD.gn
index 6ebb91c..b6a2489 100644
--- a/src/inspector/BUILD.gn
+++ b/src/inspector/BUILD.gn
@@ -106,7 +106,7 @@ config("inspector_config") {
       "/wd4996",  # Deprecated function call.
     ]
   }
-  if (is_component_build) {
+  if (is_component_build || is_electron_build) {
     defines = [ "BUILDING_V8_SHARED" ]
   }
 }
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -116,25 +116,41 @@
   if (is_component_build) {
     defines = [ "BUILDING_V8_SHARED" ]
   }
+
+  if (!is_component_build && is_electron_build) {
+    defines = [
+      "BUILDING_V8_BASE_SHARED",
+      "BUILDING_V8_PLATFORM_SHARED",
+      "BUILDING_V8_SHARED",
+    ]
+  }
 }
 
 config("internal_config_base") {
   visibility = [ ":*" ]  # Only targets in this file can depend on this.
 
   include_dirs = [ "." ]
+
+  if (!is_component_build && is_electron_build) {
+    defines = [
+      "BUILDING_V8_BASE_SHARED",
+      "BUILDING_V8_PLATFORM_SHARED",
+      "BUILDING_V8_SHARED",
+    ]
+  }
 }
 
 # This config should be applied to code using the libplatform.
 config("libplatform_config") {
   include_dirs = [ "include" ]
-  if (is_component_build) {
+  if (is_component_build || is_electron_build) {
     defines = [ "USING_V8_PLATFORM_SHARED" ]
   }
 }
 
 # This config should be applied to code using the libbase.
 config("libbase_config") {
-  if (is_component_build) {
+  if (is_component_build || is_electron_build) {
     defines = [ "USING_V8_BASE_SHARED" ]
   }
   libs = []
@@ -151,7 +167,7 @@
 # This config should only be applied to code using V8 and not any V8 code
 # itself.
 config("external_config") {
-  if (is_component_build) {
+  if (is_component_build || is_electron_build) {
     defines = [ "USING_V8_SHARED" ]
   }
   include_dirs = [ "include" ]
@@ -2265,7 +2281,7 @@
 
   defines = []
 
-  if (is_component_build) {
+  if (is_component_build || is_electron_build) {
     defines = [ "BUILDING_V8_BASE_SHARED" ]
   }
 
@@ -2361,7 +2377,7 @@
 
   configs = [ ":internal_config_base" ]
 
-  if (is_component_build) {
+  if (is_component_build || is_electron_build) {
     defines = [ "BUILDING_V8_PLATFORM_SHARED" ]
   }
 
@@ -2430,6 +2446,8 @@
 
     configs = [ ":internal_config" ]
 
+    configs += [ "//chromiumcontent:build_time_executable" ]
+
     deps = [
       ":v8_base",
       ":v8_libbase",
@@ -2462,6 +2480,8 @@
     ":internal_config",
   ]
 
+  configs += [ "//chromiumcontent:build_time_executable" ]
+
   deps = [
     ":v8_libbase",
     "//build/config/sanitizers:deps",
@@ -2505,7 +2525,7 @@
   }
 }
 
-if (is_component_build) {
+if (is_component_build || is_electron_build) {
   v8_component("v8") {
     sources = [
       "src/v8dll-main.cc",
